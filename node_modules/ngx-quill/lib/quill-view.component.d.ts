import type QuillType from 'quill';
import { AfterViewInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { CustomModule, CustomOption, QuillBeforeRender, QuillModules } from 'ngx-quill/config';
import * as i0 from "@angular/core";
export declare class QuillViewComponent implements AfterViewInit, OnChanges {
    readonly format: import("@angular/core").InputSignal<"object" | "json" | "html" | "text">;
    readonly theme: import("@angular/core").InputSignal<string>;
    readonly modules: import("@angular/core").InputSignal<QuillModules>;
    readonly debug: import("@angular/core").InputSignal<false | "error" | "warn" | "log">;
    readonly formats: import("@angular/core").InputSignal<string[]>;
    readonly sanitize: import("@angular/core").InputSignal<boolean>;
    readonly beforeRender: import("@angular/core").InputSignal<QuillBeforeRender>;
    readonly strict: import("@angular/core").InputSignal<boolean>;
    readonly content: import("@angular/core").InputSignal<any>;
    readonly customModules: import("@angular/core").InputSignal<CustomModule[]>;
    readonly customOptions: import("@angular/core").InputSignal<CustomOption[]>;
    onEditorCreated: EventEmitter<any>;
    quillEditor: QuillType;
    editorElem: HTMLElement;
    private elementRef;
    private renderer;
    private ngZone;
    private service;
    private sanitizer;
    private platformId;
    private destroyRef;
    valueSetter: (quillEditor: QuillType, value: any) => any;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<QuillViewComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<QuillViewComponent, "quill-view", never, { "format": { "alias": "format"; "required": false; "isSignal": true; }; "theme": { "alias": "theme"; "required": false; "isSignal": true; }; "modules": { "alias": "modules"; "required": false; "isSignal": true; }; "debug": { "alias": "debug"; "required": false; "isSignal": true; }; "formats": { "alias": "formats"; "required": false; "isSignal": true; }; "sanitize": { "alias": "sanitize"; "required": false; "isSignal": true; }; "beforeRender": { "alias": "beforeRender"; "required": false; "isSignal": true; }; "strict": { "alias": "strict"; "required": false; "isSignal": true; }; "content": { "alias": "content"; "required": false; "isSignal": true; }; "customModules": { "alias": "customModules"; "required": false; "isSignal": true; }; "customOptions": { "alias": "customOptions"; "required": false; "isSignal": true; }; }, { "onEditorCreated": "onEditorCreated"; }, never, never, true, never>;
}
